"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.open = exports.fromUrl = exports.RemoteFile = exports.LocalFile = void 0;
const url_1 = __importDefault(require("url"));
const typescript_1 = require("../typescript");
const generic_filehandle_1 = require("generic-filehandle");
Object.defineProperty(exports, "LocalFile", { enumerable: true, get: function () { return generic_filehandle_1.LocalFile; } });
Object.defineProperty(exports, "RemoteFile", { enumerable: true, get: function () { return generic_filehandle_1.RemoteFile; } });
function fromUrl(source) {
    const { protocol, pathname } = url_1.default.parse(source);
    if (protocol === 'file:') {
        return new generic_filehandle_1.LocalFile(unescape((0, typescript_1.ensureNotNullish)(pathname)));
    }
    return new generic_filehandle_1.RemoteFile(source);
}
exports.fromUrl = fromUrl;
function open(maybeUrl, maybePath, maybeFilehandle) {
    if (maybeFilehandle) {
        return maybeFilehandle;
    }
    if (maybeUrl) {
        return fromUrl(maybeUrl);
    }
    if (maybePath) {
        return new generic_filehandle_1.LocalFile(maybePath);
    }
    throw new Error('no url, path, or filehandle provided, cannot open');
}
exports.open = open;
//# sourceMappingURL=index.js.map