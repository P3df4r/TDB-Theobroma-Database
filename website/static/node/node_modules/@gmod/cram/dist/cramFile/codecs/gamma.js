"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const errors_1 = require("../../errors");
const _base_1 = __importDefault(require("./_base"));
const getBits_1 = require("./getBits");
class GammaCodec extends _base_1.default {
    constructor(parameters, dataType) {
        super(parameters, dataType);
        if (this.dataType !== 'int') {
            throw new errors_1.CramUnimplementedError(`${this.dataType} decoding not yet implemented by GAMMA codec`);
        }
    }
    decode(slice, coreDataBlock, blocksByContentId, cursors) {
        let length = 1;
        while ((0, getBits_1.getBits)(coreDataBlock.content, cursors.coreBlock, 1) === 0) {
            length = length + 1;
        }
        const readBits = (0, getBits_1.getBits)(coreDataBlock.content, cursors.coreBlock, length - 1);
        const value = readBits | (1 << (length - 1));
        return value - this.parameters.offset;
    }
}
exports.default = GammaCodec;
//# sourceMappingURL=gamma.js.map