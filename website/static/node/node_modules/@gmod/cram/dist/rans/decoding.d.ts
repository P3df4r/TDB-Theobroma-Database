export default Decode;
declare namespace Decode {
    export { FC };
    export { AriDecoder };
    export { Symbol };
    export { symbolInit };
    export { advanceStep };
    export { advanceSymbolStep };
    export { get };
    export { advanceSymbol };
    export { renormalize };
}
declare class FC {
    F: any;
    C: any;
}
declare class AriDecoder {
    fc: any[];
    R: any;
}
declare class Symbol {
    start: any;
    freq: any;
}
declare function symbolInit(sym: any, start: any, freq: any): void;
declare function advanceStep(r: any, start: any, freq: any, scaleBits: any): number;
declare function advanceSymbolStep(r: any, sym: any, scaleBits: any): number;
declare function get(r: any, scaleBits: any): number;
declare function advanceSymbol(r: any, pptr: any, sym: any, scaleBits: any): any;
declare function renormalize(r: any, pptr: any): any;
