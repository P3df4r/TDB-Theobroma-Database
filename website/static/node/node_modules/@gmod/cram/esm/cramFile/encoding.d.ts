export declare type NullEncoding = {
    codecId: 0;
    parametersBytes: number;
    parameters: Record<string, never>;
};
export declare type ExternalCramEncoding = {
    codecId: 1;
    parametersBytes: number;
    parameters: {
        blockContentId: number;
    };
};
export declare type GolombEncoding = {
    codecId: 2;
    parametersBytes: number;
    parameters: {
        offset: number;
        M: number;
    };
};
export declare type HuffmanEncoding = {
    codecId: 3;
    parametersBytes: number;
    parameters: {
        numCodes: number;
        symbols: number[];
        numLengths: number;
        bitLengths: number[];
    };
};
export declare type ByteArrayLengthEncoding = {
    codecId: 4;
    parametersBytes: number;
    parameters: {
        lengthsEncoding: CramEncoding;
        valuesEncoding: CramEncoding;
    };
};
export declare type ByteArrayStopCramEncoding = {
    codecId: 5;
    parametersBytes: number;
    parameters: {
        stopByte: number;
        blockContentId: number;
    };
};
export declare type BetaEncoding = {
    codecId: 6;
    parametersBytes: number;
    parameters: {
        offset: number;
        length: number;
    };
};
export declare type SubexpEncoding = {
    codecId: 7;
    parametersBytes: number;
    parameters: {
        offset: number;
        K: number;
    };
};
export declare type GolombRiceEncoding = {
    codecId: 8;
    parametersBytes: number;
    parameters: {
        offset: number;
        log2m: number;
    };
};
export declare type GammaEncoding = {
    codecId: 9;
    parametersBytes: number;
    parameters: {
        offset: number;
    };
};
export declare type CramEncoding = NullEncoding | ExternalCramEncoding | GolombEncoding | HuffmanEncoding | ByteArrayLengthEncoding | ByteArrayStopCramEncoding | BetaEncoding | SubexpEncoding | GolombRiceEncoding | GammaEncoding;
