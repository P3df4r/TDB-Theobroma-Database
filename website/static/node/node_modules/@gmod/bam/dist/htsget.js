"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }
var __asyncValues = (this && this.__asyncValues) || function (o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
};
var __asyncDelegator = (this && this.__asyncDelegator) || function (o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
};
var __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", { value: true });
var bamFile_1 = __importStar(require("./bamFile"));
require("cross-fetch/polyfill");
var bgzf_filehandle_1 = require("@gmod/bgzf-filehandle");
var sam_1 = require("./sam");
function concat(arr, opts) {
    return __awaiter(this, void 0, void 0, function () {
        var res, _a, _b;
        var _this = this;
        return __generator(this, function (_c) {
            switch (_c.label) {
                case 0: return [4 /*yield*/, Promise.all(arr.map(function (chunk) { return __awaiter(_this, void 0, void 0, function () {
                        var url, headers, referer, rest, res_1, _a, _b;
                        return __generator(this, function (_c) {
                            switch (_c.label) {
                                case 0:
                                    url = chunk.url, headers = chunk.headers;
                                    if (!url.startsWith('data:')) return [3 /*break*/, 1];
                                    return [2 /*return*/, Buffer.from(url.split(',')[1], 'base64')];
                                case 1:
                                    referer = headers.referer, rest = __rest(headers, ["referer"]);
                                    return [4 /*yield*/, fetch(url, __assign(__assign({}, opts), { headers: __assign(__assign({}, opts.headers), rest) }))];
                                case 2:
                                    res_1 = _c.sent();
                                    if (!res_1.ok) {
                                        throw new Error("Failed to fetch ".concat(res_1.statusText));
                                    }
                                    _b = (_a = Buffer).from;
                                    return [4 /*yield*/, res_1.arrayBuffer()];
                                case 3: return [2 /*return*/, _b.apply(_a, [_c.sent()])];
                            }
                        });
                    }); }))];
                case 1:
                    res = _c.sent();
                    _b = (_a = Buffer).concat;
                    return [4 /*yield*/, Promise.all(res.map(function (elt) { return (0, bgzf_filehandle_1.unzip)(elt); }))];
                case 2: return [2 /*return*/, _b.apply(_a, [_c.sent()])];
            }
        });
    });
}
var HtsgetFile = /** @class */ (function (_super) {
    __extends(HtsgetFile, _super);
    function HtsgetFile(args) {
        var _this = 
        // @ts-ignore override bam defaults
        _super.call(this, { bamFilehandle: '?', baiFilehandle: '?' }) || this;
        _this.baseUrl = args.baseUrl;
        _this.trackId = args.trackId;
        return _this;
    }
    HtsgetFile.prototype.streamRecordsForRange = function (chr, min, max, opts) {
        if (opts === void 0) { opts = {
            viewAsPairs: false,
            pairAcrossChr: false,
            maxInsertSize: 200000,
        }; }
        return __asyncGenerator(this, arguments, function streamRecordsForRange_1() {
            var base, url, chrId, result, data, uncba, chunk;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        base = "".concat(this.baseUrl, "/").concat(this.trackId);
                        url = "".concat(base, "?referenceName=").concat(chr, "&start=").concat(min, "&end=").concat(max, "&format=BAM");
                        chrId = this.chrToIndex && this.chrToIndex[chr];
                        return [4 /*yield*/, __await(fetch(url, __assign({}, opts)))];
                    case 1:
                        result = _a.sent();
                        if (!result.ok) {
                            throw new Error(result.statusText);
                        }
                        return [4 /*yield*/, __await(result.json())];
                    case 2:
                        data = _a.sent();
                        return [4 /*yield*/, __await(concat(data.htsget.urls.slice(1), opts))];
                    case 3:
                        uncba = _a.sent();
                        chunk = {
                            buffer: uncba,
                            chunk: { minv: { dataPosition: 0 } },
                            toString: function () {
                                return "".concat(chr, "_").concat(min, "_").concat(max);
                            },
                        };
                        return [5 /*yield**/, __values(__asyncDelegator(__asyncValues(this._fetchChunkFeatures(
                            // @ts-ignore
                            [chunk], chrId, min, max, opts))))];
                    case 4: return [4 /*yield*/, __await.apply(void 0, [_a.sent()])];
                    case 5:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    //@ts-ignore
    HtsgetFile.prototype._readChunk = function (params) {
        return __awaiter(this, void 0, void 0, function () {
            var chunk, buffer, c2;
            return __generator(this, function (_a) {
                chunk = params.chunk;
                buffer = chunk.buffer, c2 = chunk.chunk;
                return [2 /*return*/, { data: buffer, cpositions: null, dpositions: null, chunk: c2 }];
            });
        });
    };
    HtsgetFile.prototype.getHeader = function (opts) {
        if (opts === void 0) { opts = {}; }
        return __awaiter(this, void 0, void 0, function () {
            var url, result, data, uncba, headLen, headerText, samHeader, idToName, nameToId, sqLines;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        url = "".concat(this.baseUrl, "/").concat(this.trackId, "?referenceName=na&class=header");
                        return [4 /*yield*/, fetch(url, opts)];
                    case 1:
                        result = _a.sent();
                        if (!result.ok) {
                            throw new Error("Failed to fetch ".concat(result.statusText));
                        }
                        return [4 /*yield*/, result.json()];
                    case 2:
                        data = _a.sent();
                        return [4 /*yield*/, concat(data.htsget.urls, opts)];
                    case 3:
                        uncba = _a.sent();
                        if (uncba.readInt32LE(0) !== bamFile_1.BAM_MAGIC) {
                            throw new Error('Not a BAM file');
                        }
                        headLen = uncba.readInt32LE(4);
                        headerText = uncba.toString('utf8', 8, 8 + headLen);
                        samHeader = (0, sam_1.parseHeaderText)(headerText);
                        idToName = [];
                        nameToId = {};
                        sqLines = samHeader.filter(function (l) { return l.tag === 'SQ'; });
                        sqLines.forEach(function (sqLine, refId) {
                            sqLine.data.forEach(function (item) {
                                if (item.tag === 'SN') {
                                    // this is the ref name
                                    var refName = item.value;
                                    nameToId[refName] = refId;
                                    idToName[refId] = refName;
                                }
                            });
                        });
                        this.chrToIndex = nameToId;
                        this.indexToChr = idToName;
                        return [2 /*return*/, samHeader];
                }
            });
        });
    };
    return HtsgetFile;
}(bamFile_1.default));
exports.default = HtsgetFile;
//# sourceMappingURL=htsget.js.map