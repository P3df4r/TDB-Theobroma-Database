"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
// @ts-nocheck
const fs_1 = __importDefault(require("fs"));
const hubFile_1 = __importDefault(require("./hubFile"));
describe('HubFile', () => {
    it('reads a basic hub.txt file', () => {
        const input = fs_1.default.readFileSync('test/basic.hub.txt', 'utf8');
        const hubFile = new hubFile_1.default(input);
        expect(hubFile).toMatchSnapshot();
        expect(hubFile.toString()).toEqual(input);
    });
    it("throws if the file doesn't start with a hub entry", () => expect(() => new hubFile_1.default('trackHub UCSCHub\nshortLabel UCSC Hub\n')).toThrow(/file must begin with a line like/));
    it('throws if a hub is missing a required field', () => expect(() => new hubFile_1.default('hub UCSCHub\nshortLabel UCSC Hub\n')).toThrow(/file is missing required entr(y|ies):/));
    it('throws if a hub has an invalid field', () => expect(() => new hubFile_1.default('hub UCSCHub\ninvalid invalid Label\n')).toThrow(/file has invalid entr(y|ies):/));
});
//# sourceMappingURL=hubFile.test.js.map