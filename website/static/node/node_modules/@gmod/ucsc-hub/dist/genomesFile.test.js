"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
// @ts-nocheck
const fs_1 = __importDefault(require("fs"));
const genomesFile_1 = __importDefault(require("./genomesFile"));
describe('GenomesFile', () => {
    it('reads a basic genomes.txt file', () => {
        const input = fs_1.default.readFileSync('test/basic.genomes.txt', 'utf8');
        const genomesFile = new genomesFile_1.default(input);
        expect(genomesFile).toMatchSnapshot();
        expect(genomesFile.toString()).toEqual(input);
    });
    it("throws if the file doesn't start with a genomes entry", () => expect(() => new genomesFile_1.default('assembly hg19\ntrackDb hg19/trackDb.txt')).toThrow(/file must begin with a line like/));
    it('throws if a genome entry is missing a required field', () => expect(() => new genomesFile_1.default('genome hg19\ntrackDb hg19/trackDb.txt\n\ngenome hg38\norganism Homo sapiens')).toThrow(/file entry .* is missing required entry:/));
});
//# sourceMappingURL=genomesFile.test.js.map