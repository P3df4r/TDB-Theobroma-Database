import PluginManager from '@jbrowse/core/PluginManager';
export default function (pluginManager: PluginManager): import("mobx-state-tree").IModelType<{
    name: import("mobx-state-tree").ISimpleType<string>;
    tracks: import("mobx-state-tree").IArrayType<import("mobx-state-tree").IAnyModelType>;
} & {
    configuration: import("mobx-state-tree").ITypeUnion<any, any, any>;
    type: import("mobx-state-tree").ISimpleType<"JBrowse1Connection">;
}, {
    afterAttach(): void;
    addTrackConf(trackConf: {
        [x: string]: any;
    } & import("mobx-state-tree/dist/internal").NonEmptyObject & {
        setSubschema(slotName: string, data: unknown): any;
    } & import("mobx-state-tree").IStateTreeNode<import("@jbrowse/core/configuration").AnyConfigurationSchemaType>): any;
    addTrackConfs(trackConfs: ({
        [x: string]: any;
    } & import("mobx-state-tree/dist/internal").NonEmptyObject & {
        setSubschema(slotName: string, data: unknown): any;
    } & import("mobx-state-tree").IStateTreeNode<import("@jbrowse/core/configuration").AnyConfigurationSchemaType>)[]): any[];
    setTrackConfs(trackConfs: ({
        [x: string]: any;
    } & import("mobx-state-tree/dist/internal").NonEmptyObject & {
        setSubschema(slotName: string, data: unknown): any;
    } & import("mobx-state-tree").IStateTreeNode<import("@jbrowse/core/configuration").AnyConfigurationSchemaType>)[]): import("mobx-state-tree").IMSTArray<import("mobx-state-tree").IAnyModelType> & import("mobx-state-tree").IStateTreeNode<import("mobx-state-tree").IArrayType<import("mobx-state-tree").IAnyModelType>>;
    clear(): void;
} & {
    connect(): void;
}, import("mobx-state-tree")._NotCustomized, import("mobx-state-tree")._NotCustomized>;
