"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importStar(require("react"));
const mui_1 = require("tss-react/mui");
const mobx_react_1 = require("mobx-react");
const mobx_state_tree_1 = require("mobx-state-tree");
const ui_1 = require("@jbrowse/core/ui");
const Refresh_1 = __importDefault(require("@mui/icons-material/Refresh"));
const BlockMsg_1 = __importDefault(require("./BlockMsg"));
const useStyles = (0, mui_1.makeStyles)()(theme => ({
    loading: {
        paddingLeft: '0.6em',
        backgroundColor: theme.palette.action.disabledBackground,
        backgroundImage: 'repeating-linear-gradient(45deg, transparent, transparent 5px, rgba(255,255,255,.5) 5px, rgba(255,255,255,.5) 10px)',
        height: '100%',
        width: '100%',
        pointerEvents: 'none',
        textAlign: 'center',
    },
}));
// eslint-disable-next-line @typescript-eslint/no-explicit-any
const LoadingMessage = (0, mobx_react_1.observer)(({ model }) => {
    // only show the loading message after 300ms to prevent excessive flickering
    const [shown, setShown] = (0, react_1.useState)(false);
    const { classes } = useStyles();
    (0, react_1.useEffect)(() => {
        let killed = false;
        const timeout = setTimeout(() => {
            if (!killed) {
                setShown(true);
            }
        }, 300);
        return () => {
            clearTimeout(timeout);
            killed = true;
        };
    }, []);
    const { status: blockStatus } = model;
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    const { message: displayStatus } = (0, mobx_state_tree_1.getParent)(model, 2);
    const status = displayStatus || blockStatus;
    return (react_1.default.createElement(react_1.default.Fragment, null, shown ? (react_1.default.createElement("div", { className: classes.loading },
        react_1.default.createElement(ui_1.LoadingEllipses, { message: status }))) : null));
});
const ServerSideRenderedBlockContent = (0, mobx_react_1.observer)(({ model, }) => {
    if (model.error) {
        return (react_1.default.createElement(BlockMsg_1.default, { message: `${model.error}`, severity: "error", buttonText: "reload", icon: react_1.default.createElement(Refresh_1.default, null), action: model.reload }));
    }
    if (model.message) {
        // the message can be a fully rendered react component, e.g. the region too large message
        return react_1.default.isValidElement(model.message) ? (model.message) : (react_1.default.createElement(BlockMsg_1.default, { message: `${model.message}`, severity: "info" }));
    }
    if (!model.filled) {
        return react_1.default.createElement(LoadingMessage, { model: model });
    }
    return model.reactElement;
});
exports.default = ServerSideRenderedBlockContent;
//# sourceMappingURL=ServerSideRenderedBlockContent.js.map