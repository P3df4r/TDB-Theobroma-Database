"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const material_1 = require("@mui/material");
const mui_1 = require("tss-react/mui");
const Icons_1 = require("@jbrowse/core/ui/Icons");
const ui_1 = require("@jbrowse/core/ui");
const mobx_react_1 = require("mobx-react");
const TrackContainer_1 = __importDefault(require("./TrackContainer"));
const TracksContainer_1 = __importDefault(require("./TracksContainer"));
const ImportForm_1 = __importDefault(require("./ImportForm"));
const GetSequenceDialog_1 = __importDefault(require("./GetSequenceDialog"));
const SearchResultsDialog_1 = __importDefault(require("./SearchResultsDialog"));
const useStyles = (0, mui_1.makeStyles)()(theme => ({
    note: {
        textAlign: 'center',
        paddingTop: theme.spacing(1),
        paddingBottom: theme.spacing(1),
    },
}));
const LinearGenomeView = (0, mobx_react_1.observer)(({ model }) => {
    const { tracks, error, initialized, hasDisplayedRegions } = model;
    const { classes } = useStyles();
    if (!initialized && !error) {
        return react_1.default.createElement(ui_1.LoadingEllipses, { variant: "h5" });
    }
    if (!hasDisplayedRegions || error) {
        return react_1.default.createElement(ImportForm_1.default, { model: model });
    }
    const MiniControlsComponent = model.MiniControlsComponent();
    const HeaderComponent = model.HeaderComponent();
    return (react_1.default.createElement("div", { style: { position: 'relative' } },
        model.seqDialogDisplayed ? (react_1.default.createElement(GetSequenceDialog_1.default, { model: model, handleClose: () => model.setGetSequenceDialogOpen(false) })) : null,
        model.isSearchDialogDisplayed ? (react_1.default.createElement(SearchResultsDialog_1.default, { model: model, handleClose: () => model.setSearchResults(undefined, undefined) })) : null,
        react_1.default.createElement(HeaderComponent, { model: model }),
        react_1.default.createElement(MiniControlsComponent, { model: model }),
        react_1.default.createElement(TracksContainer_1.default, { model: model }, !tracks.length ? (react_1.default.createElement(material_1.Paper, { variant: "outlined", className: classes.note }, !model.hideNoTracksActive ? (react_1.default.createElement(react_1.default.Fragment, null,
            react_1.default.createElement(material_1.Typography, null, "No tracks active."),
            react_1.default.createElement(material_1.Button, { variant: "contained", color: "primary", onClick: model.activateTrackSelector, style: { zIndex: 1000 }, startIcon: react_1.default.createElement(Icons_1.TrackSelector, null) }, "Open track selector"))) : (react_1.default.createElement("div", { style: { height: '48px' } })))) : (tracks.map(track => (react_1.default.createElement(TrackContainer_1.default, { key: track.id, model: model, track: track })))))));
});
exports.default = LinearGenomeView;
//# sourceMappingURL=LinearGenomeView.js.map