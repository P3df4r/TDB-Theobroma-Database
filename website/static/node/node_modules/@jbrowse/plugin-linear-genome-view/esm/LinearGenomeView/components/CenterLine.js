import React, { useRef } from 'react';
import { makeStyles } from 'tss-react/mui';
import { observer } from 'mobx-react';
const useStyles = makeStyles()(() => ({
    centerLineContainer: {
        background: 'transparent',
        height: '100%',
        zIndex: 5,
        position: 'absolute',
        border: '1px black dashed',
        borderTop: 'none',
        borderBottom: 'none',
        pointerEvents: 'none',
    },
    centerLineText: {
        position: 'absolute',
        pointerEvents: 'none',
        whiteSpace: 'nowrap',
        fontWeight: 'bold',
    },
}));
function CenterLine({ model }) {
    const { bpPerPx, centerLineInfo, trackHeights, tracks, width } = model;
    const ref = useRef(null);
    const { classes } = useStyles();
    const startingPosition = width / 2;
    return tracks.length ? (React.createElement("div", { "data-testid": "centerline_container", className: classes.centerLineContainer, role: "presentation", ref: ref, style: {
            left: `${startingPosition}px`,
            width: Math.max(1 / bpPerPx, 1),
        } }, centerLineInfo && (React.createElement("div", { "data-testid": "centerline_text", className: classes.centerLineText, role: "presentation", style: {
            left: Math.max(1 / bpPerPx, 1) + 5,
            top: trackHeights,
        } },
        centerLineInfo.refName,
        ":",
        ' ',
        Math.max(Math.round(centerLineInfo.offset) + 1, 0))))) : null;
}
export default observer(CenterLine);
//# sourceMappingURL=CenterLine.js.map