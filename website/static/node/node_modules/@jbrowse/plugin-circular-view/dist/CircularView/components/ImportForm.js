"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importStar(require("react"));
const material_1 = require("@mui/material");
const mui_1 = require("tss-react/mui");
const mobx_react_1 = require("mobx-react");
const util_1 = require("@jbrowse/core/util");
const ui_1 = require("@jbrowse/core/ui");
const useStyles = (0, mui_1.makeStyles)()(theme => ({
    importFormContainer: {
        marginBottom: theme.spacing(4),
    },
}));
// eslint-disable-next-line @typescript-eslint/no-explicit-any
const ImportForm = (0, mobx_react_1.observer)(({ model }) => {
    const { classes } = useStyles();
    const session = (0, util_1.getSession)(model);
    const { error: modelError } = model;
    const { assemblyNames, assemblyManager } = session;
    const [selectedAsm, setSelectedAsm] = (0, react_1.useState)(assemblyNames[0]);
    const [error, setError] = (0, react_1.useState)(modelError);
    const assembly = assemblyManager.get(selectedAsm);
    const assemblyError = assemblyNames.length
        ? assembly === null || assembly === void 0 ? void 0 : assembly.error
        : 'No configured assemblies';
    const regions = (assembly === null || assembly === void 0 ? void 0 : assembly.regions) || [];
    const err = assemblyError || error;
    return (react_1.default.createElement(material_1.Container, { className: classes.importFormContainer },
        err ? (react_1.default.createElement(material_1.Grid, { container: true, spacing: 1, justifyContent: "center", alignItems: "center" },
            react_1.default.createElement(material_1.Grid, { item: true },
                react_1.default.createElement(ui_1.ErrorMessage, { error: err })))) : null,
        react_1.default.createElement(material_1.Grid, { container: true, spacing: 1, justifyContent: "center", alignItems: "center" },
            react_1.default.createElement(material_1.Grid, { item: true },
                react_1.default.createElement(ui_1.AssemblySelector, { onChange: val => {
                        setError(undefined);
                        setSelectedAsm(val);
                    }, session: session, selected: selectedAsm })),
            react_1.default.createElement(material_1.Grid, { item: true },
                react_1.default.createElement(material_1.Button, { disabled: !(regions === null || regions === void 0 ? void 0 : regions.length), onClick: () => model.setDisplayedRegions(regions), variant: "contained", color: "primary" }, regions.length ? 'Open' : 'Loading&hellip;')))));
});
exports.default = ImportForm;
//# sourceMappingURL=ImportForm.js.map