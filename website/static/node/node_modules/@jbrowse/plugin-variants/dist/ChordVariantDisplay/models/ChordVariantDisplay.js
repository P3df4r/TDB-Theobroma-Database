"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const plugin_circular_view_1 = require("@jbrowse/plugin-circular-view");
const configuration_1 = require("@jbrowse/core/configuration");
const mobx_state_tree_1 = require("mobx-state-tree");
const util_1 = require("@jbrowse/core/util");
const tracks_1 = require("@jbrowse/core/util/tracks");
// locals
const configSchema_1 = __importDefault(require("./configSchema"));
/**
 * #stateModel ChordVariantDisplay
 * extends `BaseChordDisplay`
 */
const ChordVariantDisplayF = (pluginManager) => {
    const configSchema = (0, configSchema_1.default)(pluginManager);
    const stateModel = mobx_state_tree_1.types
        .compose('ChordVariantDisplay', plugin_circular_view_1.BaseChordDisplayModel, mobx_state_tree_1.types.model({
        /**
         * #property
         */
        type: mobx_state_tree_1.types.literal('ChordVariantDisplay'),
        /**
         * #property
         */
        configuration: (0, configuration_1.ConfigurationReference)(configSchema),
    }))
        .views(self => ({
        /**
         * #getter
         */
        get rendererTypeName() {
            return self.configuration.renderer.type;
        },
        /**
         * #method
         */
        renderProps() {
            const view = (0, util_1.getContainingView)(self);
            return {
                ...(0, tracks_1.getParentRenderProps)(self),
                rpcDriverName: self.rpcDriverName,
                displayModel: self,
                bezierRadius: view.radiusPx * self.bezierRadiusRatio,
                radius: view.radiusPx,
                // @ts-ignore
                blockDefinitions: this.blockDefinitions,
                config: self.configuration.renderer,
                onChordClick: self.onChordClick,
            };
        },
    }));
    return { stateModel, configSchema };
};
// http://localhost:3000/test_data/hs37d5.HG002-SequelII-CCS.sv.vcf.gz.tbi
// render request is for 1.5x the current viewing window
// tracks all have a height
//
exports.default = ChordVariantDisplayF;
//# sourceMappingURL=ChordVariantDisplay.js.map