import PluginManager from '@jbrowse/core/PluginManager';
export declare const configSchema: import("@jbrowse/core/configuration").AnyConfigurationSchemaType;
export declare function stateModelFactory(pluginManager: PluginManager): import("mobx-state-tree").IModelType<{
    id: import("mobx-state-tree").IOptionalIType<import("mobx-state-tree").ISimpleType<string>, [undefined]>;
    type: import("mobx-state-tree").ISimpleType<"BaseFeatureWidget">;
    featureData: import("mobx-state-tree").IType<any, any, any>;
    formattedFields: import("mobx-state-tree").IType<any, any, any>;
    unformattedFeatureData: import("mobx-state-tree").IType<any, any, any>;
    view: import("mobx-state-tree").IMaybe<import("mobx-state-tree").IReferenceType<import("mobx-state-tree").IAnyType>>;
    track: import("mobx-state-tree").IMaybe<import("mobx-state-tree").IReferenceType<import("mobx-state-tree").IAnyType>>;
    trackId: import("mobx-state-tree").IMaybe<import("mobx-state-tree").ISimpleType<string>>;
    trackType: import("mobx-state-tree").IMaybe<import("mobx-state-tree").ISimpleType<string>>;
} & {
    type: import("mobx-state-tree").ISimpleType<"VariantFeatureWidget">;
    descriptions: import("mobx-state-tree").IType<any, any, any>;
}, {
    setFeatureData(featureData: Record<string, unknown>): void;
    clearFeatureData(): void;
    setFormattedData(feat: Record<string, unknown>): void;
    setExtra(type?: string | undefined, trackId?: string | undefined): void;
} & {
    afterCreate(): void;
}, {
    type: "BaseFeatureWidget";
} & Partial<import("mobx-state-tree/dist/internal").ExtractCFromProps<{
    id: import("mobx-state-tree").IOptionalIType<import("mobx-state-tree").ISimpleType<string>, [undefined]>;
    type: import("mobx-state-tree").ISimpleType<"BaseFeatureWidget">;
    featureData: import("mobx-state-tree").IType<any, any, any>;
    formattedFields: import("mobx-state-tree").IType<any, any, any>;
    unformattedFeatureData: import("mobx-state-tree").IType<any, any, any>;
    view: import("mobx-state-tree").IMaybe<import("mobx-state-tree").IReferenceType<import("mobx-state-tree").IAnyType>>;
    track: import("mobx-state-tree").IMaybe<import("mobx-state-tree").IReferenceType<import("mobx-state-tree").IAnyType>>;
    trackId: import("mobx-state-tree").IMaybe<import("mobx-state-tree").ISimpleType<string>>;
    trackType: import("mobx-state-tree").IMaybe<import("mobx-state-tree").ISimpleType<string>>;
}>> & import("mobx-state-tree/dist/internal").NonEmptyObject & import("mobx-state-tree")._NotCustomized, {
    id: string;
    type: "BaseFeatureWidget";
    track: import("mobx-state-tree").ReferenceIdentifier | undefined;
    view: import("mobx-state-tree").ReferenceIdentifier | undefined;
    trackId: string | undefined;
    trackType: string | undefined;
    formattedFields: any;
    finalizedFeatureData: any;
} & import("mobx-state-tree")._NotCustomized>;
declare const _default: (pluginManager: PluginManager) => void;
export default _default;
