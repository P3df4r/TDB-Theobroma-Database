import { Feature } from '@jbrowse/core/util/simpleFeature';
/**
 * VCF Feature creation with lazy genotype evaluation.
 */
interface Samples {
    [key: string]: {
        [key: string]: {
            values: string[] | number[] | null;
        };
    };
}
interface FeatureData {
    [key: string]: unknown;
    refName: string;
    start: number;
    end: number;
    description?: string;
    type?: string;
    name?: string;
    aliases?: string[];
    samples?: Samples;
}
export default class VCFFeature implements Feature {
    private variant;
    private parser;
    private data;
    private _id;
    constructor(args: {
        variant: any;
        parser: any;
        id: string;
    });
    get(field: string): any;
    set(): void;
    parent(): undefined;
    children(): undefined;
    tags(): string[];
    id(): string;
    dataFromVariant(variant: {
        REF: string;
        POS: number;
        ALT: string[];
        CHROM: string;
        INFO: any;
        ID: string[];
    }): FeatureData;
    /**
     * Get a sequence ontology (SO) term that describes the variant type
     */
    _getSOTermAndDescription(ref: string, alt: string[]): [string, string] | [undefined, undefined];
    static _altTypeToSO: {
        [key: string]: string | undefined;
    };
    _getSOAndDescFromAltDefs(ref: string, alt: string): [string, string] | [undefined, undefined];
    _getSOAndDescByExamination(ref: string, alt: string): [string, string];
    _makeDescriptionString(soTerm: string, ref: string, alt: string): string;
    toJSON(): any;
}
export {};
