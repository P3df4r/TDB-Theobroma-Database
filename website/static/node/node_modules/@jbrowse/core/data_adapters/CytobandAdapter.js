"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DataAdapter = exports.configSchema = void 0;
const simpleFeature_1 = __importDefault(require("../util/simpleFeature"));
const configuration_1 = require("../configuration");
const io_1 = require("../util/io");
const BaseAdapter_1 = require("./BaseAdapter");
/**
 * #config CytobandAdapter
 */
function x() { } // eslint-disable-line @typescript-eslint/no-unused-vars
const configSchema = (0, configuration_1.ConfigurationSchema)('CytobandAdapter', {
    /**
     * #slot
     */
    cytobandLocation: {
        type: 'fileLocation',
        defaultValue: { uri: '/path/to/cytoband.txt.gz' },
    },
}, { explicitlyTyped: true });
exports.configSchema = configSchema;
class CytobandAdapter extends BaseAdapter_1.BaseAdapter {
    async getData() {
        const loc = (0, configuration_1.readConfObject)(this.config, 'cytobandLocation');
        if (loc.uri === '' || loc.uri === '/path/to/cytoband.txt.gz') {
            return [];
        }
        const data = await (0, io_1.openLocation)(loc).readFile('utf8');
        return data
            .split(/\n|\r\n|\r/)
            .filter(f => !!f.trim())
            .map(line => {
            const [refName, start, end, name, type] = line.split('\t');
            return new simpleFeature_1.default({
                uniqueId: line,
                refName,
                start: +start,
                end: +end,
                name,
                type,
            });
        });
    }
    freeResources( /* { region } */) { }
}
exports.DataAdapter = CytobandAdapter;
