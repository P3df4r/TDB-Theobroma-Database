"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const jexlStrings_1 = require("../../../util/jexlStrings");
class SerializableFilterChain {
    constructor({ filters = [] }) {
        this.filterChain = filters.map(inputFilter => {
            if (typeof inputFilter === 'string') {
                const expr = (0, jexlStrings_1.stringToJexlExpression)(inputFilter);
                return { expr, string: inputFilter };
            }
            throw new Error(`invalid inputFilter string "${inputFilter}"`);
        });
    }
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    passes(...args) {
        for (let i = 0; i < this.filterChain.length; i += 1) {
            if (
            // @ts-ignore
            !this.filterChain[i].expr.evalSync({ feature: args[0] })) {
                return false;
            }
        }
        return true;
    }
    toJSON() {
        return { filters: this.filterChain.map(f => f.string) };
    }
    static fromJSON(json) {
        return new SerializableFilterChain(json);
    }
}
exports.default = SerializableFilterChain;
