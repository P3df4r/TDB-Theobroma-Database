import { Instance } from 'mobx-state-tree';
import { MenuItem } from '../../ui';
declare const BaseViewModel: import("mobx-state-tree").IModelType<{
    id: import("mobx-state-tree").IOptionalIType<import("mobx-state-tree").ISimpleType<string>, [undefined]>;
    displayName: import("mobx-state-tree").IMaybe<import("mobx-state-tree").ISimpleType<string>>;
    minimized: import("mobx-state-tree").IType<boolean | undefined, boolean, boolean>;
}, {
    width: number;
} & {
    /**
     * #getter
     */
    menuItems(): MenuItem[];
} & {
    /**
     * #action
     */
    setDisplayName(name: string): void;
    /**
     * #action
     * width is an important attribute of the view model, when it becomes set, it
     * often indicates when the app can start drawing to it. certain views like
     * lgv are strict about this because if it tries to draw before it knows the
     * width it should draw to, it may start fetching data for regions it doesn't
     * need to
     *
     * setWidth is updated by a ResizeObserver generally, the views often need
     * to know how wide they are to properly draw genomic regions
     */
    setWidth(newWidth: number): void;
    /**
     * #action
     */
    setMinimized(flag: boolean): void;
}, import("mobx-state-tree")._NotCustomized, import("mobx-state-tree")._NotCustomized>;
export default BaseViewModel;
export interface IBaseViewModel extends Instance<typeof BaseViewModel> {
}
