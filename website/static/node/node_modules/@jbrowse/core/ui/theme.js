"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createJBrowseTheme = exports.createJBrowseBaseTheme = exports.createJBrowseDefaultOverrides = exports.createJBrowseDefaultProps = exports.jbrowseDefaultPalette = void 0;
const colors_1 = require("@mui/material/colors");
const styles_1 = require("@mui/material/styles");
const deepmerge_1 = __importDefault(require("deepmerge"));
const midnight = '#0D233F';
const grape = '#721E63';
const forest = '#135560';
const mandarin = '#FFB11D';
const refTheme = (0, styles_1.createTheme)();
exports.jbrowseDefaultPalette = {
    // type: 'dark',
    primary: { main: midnight },
    secondary: { main: grape },
    tertiary: refTheme.palette.augmentColor({ color: { main: forest } }),
    quaternary: refTheme.palette.augmentColor({ color: { main: mandarin } }),
    stopCodon: '#e22',
    startCodon: '#3e3',
    bases: {
        A: refTheme.palette.augmentColor({ color: colors_1.green }),
        C: refTheme.palette.augmentColor({ color: colors_1.blue }),
        G: refTheme.palette.augmentColor({ color: colors_1.amber }),
        T: refTheme.palette.augmentColor({ color: colors_1.red }),
    },
};
function createJBrowseDefaultProps( /* palette: PaletteOptions = {} */) {
    return {
        components: {
            MuiButton: {
                defaultProps: {
                    size: 'small',
                },
            },
            MuiAccordion: {
                defaultProps: {
                    disableGutters: true,
                    TransitionProps: { timeout: 150 },
                },
            },
            MuiFilledInput: {
                defaultProps: {
                    margin: 'dense',
                },
            },
            MuiFormControl: {
                defaultProps: {
                    margin: 'dense',
                    size: 'small',
                },
            },
            MuiFormHelperText: {
                defaultProps: {
                    margin: 'dense',
                },
            },
            MuiIconButton: {
                defaultProps: {
                    size: 'small',
                },
            },
            MuiInputBase: {
                defaultProps: {
                    margin: 'dense',
                },
            },
            MuiAutocomplete: {
                defaultProps: {
                    size: 'small',
                },
            },
            MuiInputLabel: {
                defaultProps: {
                    margin: 'dense',
                },
            },
            MuiToolbar: {
                defaultProps: {
                    variant: 'dense',
                },
            },
            MuiListItem: {
                defaultProps: {
                    dense: true,
                },
            },
            MuiOutlinedInput: {
                defaultProps: {
                    margin: 'dense',
                },
            },
            MuiFab: {
                defaultProps: {
                    size: 'small',
                },
            },
            MuiTable: {
                defaultProps: {
                    size: 'small',
                },
            },
            MuiMenuList: {
                defaultProps: {
                    dense: true,
                },
            },
            MuiMenuItem: {
                defaultProps: {
                    dense: true,
                },
            },
            MuiTextField: {
                defaultProps: {
                    margin: 'dense',
                    variant: 'standard',
                },
            },
        },
    };
}
exports.createJBrowseDefaultProps = createJBrowseDefaultProps;
function createJBrowseDefaultOverrides(palette = {}) {
    const generatedPalette = (0, deepmerge_1.default)(exports.jbrowseDefaultPalette, palette);
    return {
        components: {
            MuiIconButton: {
                styleOverrides: {
                    colorSecondary: {
                        color: generatedPalette.tertiary.main,
                    },
                },
            },
            MuiButton: {
                styleOverrides: {
                    textSecondary: {
                        color: generatedPalette.tertiary.main,
                    },
                },
            },
            MuiFab: {
                styleOverrides: {
                    secondary: {
                        backgroundColor: generatedPalette.quaternary.main,
                    },
                },
            },
            MuiLink: {
                styleOverrides: {
                    root: {
                        color: generatedPalette.tertiary.main,
                    },
                },
            },
            MuiAccordionSummary: {
                styleOverrides: {
                    root: {
                        backgroundColor: generatedPalette.tertiary.main,
                    },
                    content: {
                        color: generatedPalette.tertiary.contrastText,
                    },
                },
            },
        },
    };
}
exports.createJBrowseDefaultOverrides = createJBrowseDefaultOverrides;
function createJBrowseBaseTheme(palette) {
    return {
        palette: exports.jbrowseDefaultPalette,
        typography: { fontSize: 12 },
        spacing: 4,
        ...(0, deepmerge_1.default)(createJBrowseDefaultProps(), createJBrowseDefaultOverrides(palette)),
    };
}
exports.createJBrowseBaseTheme = createJBrowseBaseTheme;
function createJBrowseTheme(theme) {
    var _a, _b;
    if ((_a = theme === null || theme === void 0 ? void 0 : theme.palette) === null || _a === void 0 ? void 0 : _a.tertiary) {
        theme = (0, deepmerge_1.default)(theme, {
            palette: {
                tertiary: refTheme.palette.augmentColor('color' in theme.palette.tertiary
                    ? theme.palette.tertiary
                    : { color: theme.palette.tertiary }),
            },
        });
    }
    if ((_b = theme === null || theme === void 0 ? void 0 : theme.palette) === null || _b === void 0 ? void 0 : _b.quaternary) {
        theme = (0, deepmerge_1.default)(theme, {
            palette: {
                quaternary: refTheme.palette.augmentColor('color' in theme.palette.quaternary
                    ? theme.palette.quaternary
                    : { color: theme.palette.quaternary }),
            },
        });
    }
    return (0, styles_1.createTheme)((0, deepmerge_1.default)(createJBrowseBaseTheme(theme === null || theme === void 0 ? void 0 : theme.palette), theme || {}));
}
exports.createJBrowseTheme = createJBrowseTheme;
