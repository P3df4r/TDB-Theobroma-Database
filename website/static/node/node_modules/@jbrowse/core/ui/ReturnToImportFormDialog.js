"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const mobx_react_1 = require("mobx-react");
const material_1 = require("@mui/material");
const mui_1 = require("tss-react/mui");
const Close_1 = __importDefault(require("@mui/icons-material/Close"));
const useStyles = (0, mui_1.makeStyles)()(theme => ({
    closeButton: {
        position: 'absolute',
        right: theme.spacing(1),
        top: theme.spacing(1),
        color: theme.palette.grey[500],
    },
}));
function ReturnToImportFormDialog({ model, handleClose, }) {
    const { classes } = useStyles();
    return (react_1.default.createElement(material_1.Dialog, { maxWidth: "xl", open: true, onClose: handleClose },
        react_1.default.createElement(material_1.DialogTitle, null,
            "Reference sequence",
            handleClose ? (react_1.default.createElement(material_1.IconButton, { className: classes.closeButton, onClick: () => handleClose(), size: "large" },
                react_1.default.createElement(Close_1.default, null))) : null),
        react_1.default.createElement(material_1.Divider, null),
        react_1.default.createElement(material_1.DialogContent, null,
            react_1.default.createElement(material_1.Typography, null, "Are you sure you want to return to the import form? This will lose your current view")),
        react_1.default.createElement(material_1.DialogActions, null,
            react_1.default.createElement(material_1.Button, { onClick: () => {
                    model.clearView();
                    handleClose();
                }, variant: "contained", color: "primary", autoFocus: true }, "OK"),
            react_1.default.createElement(material_1.Button, { onClick: () => handleClose(), color: "secondary", variant: "contained" }, "Cancel"))));
}
exports.default = (0, mobx_react_1.observer)(ReturnToImportFormDialog);
