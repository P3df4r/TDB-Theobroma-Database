"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const material_1 = require("@mui/material");
const mui_1 = require("tss-react/mui");
// icons
const Close_1 = __importDefault(require("@mui/icons-material/Close"));
const Settings_1 = __importDefault(require("@mui/icons-material/Settings"));
const useStyles = (0, mui_1.makeStyles)()(theme => ({
    closeButton: {
        position: 'absolute',
        right: theme.spacing(1),
        top: theme.spacing(1),
        color: theme.palette.grey[500],
    },
    dialogContent: {},
}));
function HelpDialog({ handleClose, }) {
    const { classes } = useStyles();
    return (react_1.default.createElement(material_1.Dialog, { maxWidth: "xl", open: true, onClose: () => handleClose() },
        react_1.default.createElement(material_1.DialogTitle, null,
            "Feature sequence panel",
            handleClose ? (react_1.default.createElement(material_1.IconButton, { className: classes.closeButton, onClick: () => handleClose() },
                react_1.default.createElement(Close_1.default, null))) : null),
        react_1.default.createElement(material_1.Divider, null),
        react_1.default.createElement(material_1.DialogContent, { className: classes.dialogContent },
            react_1.default.createElement(material_1.Typography, { paragraph: true }, "The \"Feature sequence\" panel shows the underlying genomic sequence for a given feature, fetched from the reference genome."),
            react_1.default.createElement(material_1.Typography, null, "For gene features, this panel does special calculations to e.g. stitch together the coding sequence, the options are:"),
            react_1.default.createElement("ul", null,
                react_1.default.createElement("li", null, "CDS - shows the stitched together CDS sequences"),
                react_1.default.createElement("li", null, "Protein - the translated coding sequence, with the \"standard\" genetic code"),
                react_1.default.createElement("li", null, "cDNA - shows the UTRs and stitched together CDS sequences"),
                react_1.default.createElement("li", null, "Gene w/ introns - the sequence underlying the entire gene including including introns, with UTR and CDS highlighted"),
                react_1.default.createElement("li", null, "Gene w/ Nbp introns - same \"Gene w/ introns\", but limiting to a subset of the intron sequence displayed"),
                react_1.default.createElement("li", null, "Gene +/- Nbp up+down stream - same as \"Gene w/ introns\" but with up and downstream sequence displayed"),
                react_1.default.createElement("li", null, "Gene +/- Nbp up+down stream, Nbp introns - same as \"Gene w/ introns\", but with limited intron sequence displayed and up and downstream sequence")),
            react_1.default.createElement(material_1.Typography, { paragraph: true }, "For other feature types, the options are:"),
            react_1.default.createElement("ul", null,
                react_1.default.createElement("li", null, "Feature sequence - the reference genome sequence underlying the feature"),
                react_1.default.createElement("li", null, "Feature sequence +/- Nbp up+down stream - the reference genome sequence underlying the feature, with the up and downstream sequence")),
            react_1.default.createElement(material_1.Typography, null,
                "Note: you can use the \"gear icon\" ",
                react_1.default.createElement(Settings_1.default, null),
                " to edit the number of bp displayed up/downstream and in the intron region")),
        react_1.default.createElement(material_1.DialogActions, null,
            react_1.default.createElement(material_1.Button, { onClick: () => handleClose(), autoFocus: true, variant: "contained" }, "Close"))));
}
exports.default = HelpDialog;
