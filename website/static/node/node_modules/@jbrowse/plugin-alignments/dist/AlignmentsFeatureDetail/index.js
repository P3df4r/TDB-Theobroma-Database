"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.configSchema = exports.stateModelFactory = void 0;
const react_1 = require("react");
const configuration_1 = require("@jbrowse/core/configuration");
const mobx_state_tree_1 = require("mobx-state-tree");
const WidgetType_1 = __importDefault(require("@jbrowse/core/pluggableElementTypes/WidgetType"));
const BaseFeatureWidget_1 = require("@jbrowse/core/BaseFeatureWidget");
const configSchema = (0, configuration_1.ConfigurationSchema)('AlignmentsFeatureWidget', {});
exports.configSchema = configSchema;
function stateModelFactory(pluginManager) {
    const baseModel = (0, BaseFeatureWidget_1.stateModelFactory)(pluginManager);
    return mobx_state_tree_1.types.compose(baseModel, mobx_state_tree_1.types.model('AlignmentsFeatureWidget', {
        type: mobx_state_tree_1.types.literal('AlignmentsFeatureWidget'),
    }));
}
exports.stateModelFactory = stateModelFactory;
function register(pluginManager) {
    pluginManager.addWidgetType(() => new WidgetType_1.default({
        name: 'AlignmentsFeatureWidget',
        heading: 'Feature details',
        configSchema,
        stateModel: stateModelFactory(pluginManager),
        ReactComponent: (0, react_1.lazy)(() => Promise.resolve().then(() => __importStar(require('./AlignmentsFeatureDetail')))),
    }));
}
exports.default = register;
//# sourceMappingURL=index.js.map