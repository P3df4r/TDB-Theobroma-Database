"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const mobx_react_1 = require("mobx-react");
const plugin_wiggle_1 = require("@jbrowse/plugin-wiggle");
const en = (n) => n.toLocaleString('en-US');
const toP = (s = 0) => +(+s).toFixed(1);
const pct = (n, total) => `${toP((n / (total || 1)) * 100)}%`;
const TooltipContents = react_1.default.forwardRef(({ feature }, reactRef) => {
    const start = feature.get('start');
    const end = feature.get('end');
    const name = feature.get('refName');
    const { refbase, all, total, ref, '-1': rn1, '1': r1, '0': r0, ...info } = feature.get('snpinfo');
    const loc = [name, start === end ? en(start) : `${en(start)}..${en(end)}`]
        .filter(f => !!f)
        .join(':');
    return (react_1.default.createElement("div", { ref: reactRef },
        react_1.default.createElement("table", null,
            react_1.default.createElement("caption", null, loc),
            react_1.default.createElement("thead", null,
                react_1.default.createElement("tr", null,
                    react_1.default.createElement("th", null, "Base"),
                    react_1.default.createElement("th", null, "Count"),
                    react_1.default.createElement("th", null, "% of Total"),
                    react_1.default.createElement("th", null, "Strands"),
                    react_1.default.createElement("th", null, "Source"))),
            react_1.default.createElement("tbody", null,
                react_1.default.createElement("tr", null,
                    react_1.default.createElement("td", null, "Total"),
                    react_1.default.createElement("td", null, all)),
                react_1.default.createElement("tr", null,
                    react_1.default.createElement("td", null,
                        "REF ",
                        refbase ? `(${refbase.toUpperCase()})` : ''),
                    react_1.default.createElement("td", null, ref),
                    react_1.default.createElement("td", null, pct(ref, all)),
                    react_1.default.createElement("td", null,
                        rn1 ? `${rn1}(-)` : '',
                        r1 ? `${r1}(+)` : ''),
                    react_1.default.createElement("td", null)),
                Object.entries(info).map(([key, entry]) => Object.entries(entry).map(([base, score]) => (react_1.default.createElement("tr", { key: base },
                    react_1.default.createElement("td", null, base.toUpperCase()),
                    react_1.default.createElement("td", null, score.total),
                    react_1.default.createElement("td", null, base === 'total' || base === 'skip'
                        ? '---'
                        : pct(score.total, all)),
                    react_1.default.createElement("td", null,
                        score['-1'] ? `${score['-1']}(-)` : '',
                        score['1'] ? `${score['1']}(+)` : ''),
                    react_1.default.createElement("td", null, key)))))))));
});
const SNPCoverageTooltip = (0, mobx_react_1.observer)((props) => {
    const { model } = props;
    const { featureUnderMouse: feat } = model;
    return feat && feat.get('type') === 'skip' ? null : (react_1.default.createElement(plugin_wiggle_1.Tooltip, { TooltipContents: TooltipContents, ...props }));
});
exports.default = SNPCoverageTooltip;
//# sourceMappingURL=Tooltip.js.map