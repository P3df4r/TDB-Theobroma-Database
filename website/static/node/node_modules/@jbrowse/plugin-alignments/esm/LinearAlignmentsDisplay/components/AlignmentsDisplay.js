import React from 'react';
import { observer } from 'mobx-react';
import { makeStyles } from 'tss-react/mui';
import { getConf } from '@jbrowse/core/configuration';
import { ResizeHandle } from '@jbrowse/core/ui';
const useStyles = makeStyles()(() => ({
    resizeHandle: {
        height: 2,
        position: 'absolute',
        zIndex: 2,
    },
}));
function AlignmentsDisplay({ model }) {
    const { PileupDisplay, SNPCoverageDisplay, showPileup, showCoverage } = model;
    const { classes } = useStyles();
    const top = SNPCoverageDisplay.height;
    return (React.createElement("div", { "data-testid": `display-${getConf(model, 'displayId')}`, style: { position: 'relative' } },
        showCoverage ? (React.createElement(React.Fragment, null,
            React.createElement("div", { "data-testid": "Blockset-snpcoverage" },
                React.createElement(SNPCoverageDisplay.RenderingComponent, { model: SNPCoverageDisplay })),
            React.createElement(ResizeHandle, { onDrag: delta => {
                    SNPCoverageDisplay.setHeight(SNPCoverageDisplay.height + delta);
                    return delta;
                }, className: classes.resizeHandle, style: {
                    top,
                } }))) : null,
        showPileup ? (React.createElement("div", { "data-testid": "Blockset-pileup", style: {
                position: 'absolute',
                top: showCoverage ? SNPCoverageDisplay.height : 0,
            } },
            React.createElement(PileupDisplay.RenderingComponent, { model: PileupDisplay }))) : null));
}
export default observer(AlignmentsDisplay);
//# sourceMappingURL=AlignmentsDisplay.js.map