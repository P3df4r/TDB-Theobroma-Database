import { drawLine } from '../drawxy';
import { groupBy } from '../util';
import WiggleBaseRenderer from '../WiggleBaseRenderer';
export default class MultiLineRenderer extends WiggleBaseRenderer {
    // @ts-ignore
    async draw(ctx, props) {
        const { sources, features } = props;
        const groups = groupBy([...features.values()], f => f.get('source'));
        let feats = [];
        sources.forEach(source => {
            const features = groups[source.name];
            if (!features) {
                return;
            }
            const { reducedFeatures } = drawLine(ctx, {
                ...props,
                features,
                colorCallback: () => source.color || 'blue',
            });
            feats = feats.concat(reducedFeatures);
        });
        return { reducedFeatures: feats };
    }
}
//# sourceMappingURL=MultiLineRenderer.js.map