"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const mobx_state_tree_1 = require("mobx-state-tree");
const configuration_1 = require("@jbrowse/core/configuration");
const configSchema_1 = __importDefault(require("../configSchema"));
/**
 * #config MultiRowLineRenderer
 */
function x() { } // eslint-disable-line @typescript-eslint/no-unused-vars
const configSchema = (0, configuration_1.ConfigurationSchema)('MultiRowLineRenderer', {
    /**
     * #slot
     */
    displayCrossHatches: {
        type: 'boolean',
        description: 'choose to draw cross hatches (sideways lines)',
        defaultValue: false,
    },
    /**
     * #slot
     */
    summaryScoreMode: {
        type: 'stringEnum',
        model: mobx_state_tree_1.types.enumeration('Score type', ['max', 'min', 'avg', 'whiskers']),
        description: 'choose whether to use max/min/average or whiskers which combines all three into the same rendering',
        defaultValue: 'avg',
    },
}, {
    /**
     * #baseConfiguration
     */
    baseConfiguration: configSchema_1.default,
    explicitlyTyped: true,
});
exports.default = configSchema;
//# sourceMappingURL=configSchema.js.map