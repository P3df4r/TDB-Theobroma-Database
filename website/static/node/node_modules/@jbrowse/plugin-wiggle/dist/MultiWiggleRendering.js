"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const mobx_react_1 = require("mobx-react");
const react_1 = __importStar(require("react"));
const util_1 = require("@jbrowse/core/util");
const ui_1 = require("@jbrowse/core/ui");
function WiggleRendering(props) {
    const { regions, features, bpPerPx, width, height, sources, onMouseLeave = () => { }, onMouseMove = () => { }, onFeatureClick = () => { }, displayModel, } = props;
    const [region] = regions;
    const ref = (0, react_1.useRef)(null);
    function getFeatureUnderMouse(eventClientX, eventClientY) {
        if (!ref.current) {
            return;
        }
        const rect = ref.current.getBoundingClientRect();
        const offsetX = eventClientX - rect.left;
        const offsetY = eventClientY - rect.top;
        const source = sources[Math.floor((offsetY / height) * sources.length)];
        if (!source) {
            return;
        }
        const px = region.reversed ? width - offsetX : offsetX;
        const mouseoverBp = region.start + bpPerPx * px;
        let featureUnderMouse;
        if (displayModel.isMultiRow) {
            for (const feature of features.values()) {
                if (feature.get('source') !== source.name) {
                    continue;
                }
                if (mouseoverBp <= feature.get('end') + bpPerPx &&
                    mouseoverBp >= feature.get('start')) {
                    featureUnderMouse = feature;
                    break;
                }
            }
        }
        else {
            const featuresUnderMouse = [];
            for (const feature of features.values()) {
                if (mouseoverBp <= feature.get('end') + bpPerPx &&
                    mouseoverBp >= feature.get('start')) {
                    featuresUnderMouse.push(feature);
                }
            }
            if (featuresUnderMouse.length) {
                const pos = Math.floor(mouseoverBp);
                featureUnderMouse = new util_1.SimpleFeature({
                    uniqueId: 'mouseoverfeat',
                    sources: Object.fromEntries(featuresUnderMouse
                        .map(f => f.toJSON())
                        .map(f => {
                        const { refName, start, end, source, ...rest } = f;
                        return [source, rest];
                    })),
                    ...region,
                    start: pos,
                    end: pos + 1,
                });
            }
        }
        return featureUnderMouse;
    }
    return (react_1.default.createElement("div", { ref: ref, onMouseMove: event => {
            const featureUnderMouse = getFeatureUnderMouse(event.clientX, event.clientY);
            onMouseMove(event, featureUnderMouse);
        }, onClick: event => {
            const featureUnderMouse = getFeatureUnderMouse(event.clientX, event.clientY);
            onFeatureClick(event, featureUnderMouse);
        }, onMouseLeave: event => onMouseLeave(event), style: {
            overflow: 'visible',
            position: 'relative',
            height,
        } },
        react_1.default.createElement(ui_1.PrerenderedCanvas, { ...props })));
}
exports.default = (0, mobx_react_1.observer)(WiggleRendering);
//# sourceMappingURL=MultiWiggleRendering.js.map