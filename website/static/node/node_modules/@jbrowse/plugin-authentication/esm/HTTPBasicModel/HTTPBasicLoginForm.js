import React, { useState } from 'react';
import { Button, Dialog, DialogContent, DialogTitle, DialogActions, TextField, } from '@mui/material';
export const HTTPBasicLoginForm = ({ internetAccountId, handleClose, }) => {
    const [username, setUsername] = useState('');
    const [password, setPassword] = useState('');
    function onSubmit(event) {
        if (username && password) {
            handleClose(btoa(`${username}:${password}`));
        }
        else {
            handleClose();
        }
        event.preventDefault();
    }
    return (React.createElement(React.Fragment, null,
        React.createElement(Dialog, { open: true, maxWidth: "xl", "data-testid": "login-httpbasic" },
            React.createElement(DialogTitle, null,
                "Log In for ",
                internetAccountId),
            React.createElement("form", { onSubmit: onSubmit },
                React.createElement(DialogContent, { style: { display: 'flex', flexDirection: 'column' } },
                    React.createElement(TextField, { required: true, label: "Username", variant: "outlined", inputProps: { 'data-testid': 'login-httpbasic-username' }, onChange: event => setUsername(event.target.value), margin: "dense" }),
                    React.createElement(TextField, { required: true, label: "Password", type: "password", autoComplete: "current-password", variant: "outlined", inputProps: { 'data-testid': 'login-httpbasic-password' }, onChange: event => setPassword(event.target.value), margin: "dense" })),
                React.createElement(DialogActions, null,
                    React.createElement(Button, { variant: "contained", color: "primary", type: "submit" }, "Submit"),
                    React.createElement(Button, { variant: "contained", type: "submit", onClick: () => handleClose() }, "Cancel"))))));
};
//# sourceMappingURL=HTTPBasicLoginForm.js.map