"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const configuration_1 = require("@jbrowse/core/configuration");
const configSchema_1 = __importDefault(require("../OAuthModel/configSchema"));
/**
 * #config DropboxOAuthInternetAccount
 */
function x() { } // eslint-disable-line @typescript-eslint/no-unused-vars
const DropboxOAuthConfigSchema = (0, configuration_1.ConfigurationSchema)('DropboxOAuthInternetAccount', {
    /**
     * #slot
     */
    authEndpoint: {
        description: 'the authorization code endpoint of the internet account',
        type: 'string',
        defaultValue: 'https://www.dropbox.com/oauth2/authorize',
    },
    /**
     * #slot
     */
    tokenEndpoint: {
        description: 'the token endpoint of the internet account',
        type: 'string',
        defaultValue: 'https://api.dropbox.com/oauth2/token',
    },
    /**
     * #slot
     */
    needsPKCE: {
        description: 'boolean to indicate if the endpoint needs a PKCE code',
        type: 'boolean',
        defaultValue: true,
    },
    /**
     * #slot
     */
    domains: {
        description: 'array of valid domains the url can contain to use this account',
        type: 'stringArray',
        defaultValue: [
            'addtodropbox.com',
            'db.tt',
            'dropbox.com',
            'dropboxapi.com',
            'dropboxbusiness.com',
            'dropbox.tech',
            'getdropbox.com',
        ],
    },
    /**
     * #slot
     */
    hasRefreshToken: {
        description: 'true if the endpoint can supply a refresh token',
        type: 'boolean',
        defaultValue: true,
    },
}, {
    /**
     * #baseConfiguration
     */
    baseConfiguration: configSchema_1.default,
    explicitlyTyped: true,
});
exports.default = DropboxOAuthConfigSchema;
//# sourceMappingURL=configSchema.js.map