"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GoogleDriveOAuthInternetAccountModelFactory = exports.GoogleDriveOAuthConfigSchema = exports.DropboxOAuthInternetAccountModelFactory = exports.DropboxOAuthConfigSchema = exports.HTTPBasicInternetAccountModelFactory = exports.HTTPBasicConfigSchema = exports.ExternalTokenInternetAccountModelFactory = exports.ExternalTokenConfigSchema = exports.OAuthInternetAccountModelFactory = exports.OAuthConfigSchema = void 0;
const Plugin_1 = __importDefault(require("@jbrowse/core/Plugin"));
const InternetAccountType_1 = __importDefault(require("@jbrowse/core/pluggableElementTypes/InternetAccountType"));
const OAuthModel_1 = require("./OAuthModel");
Object.defineProperty(exports, "OAuthConfigSchema", { enumerable: true, get: function () { return OAuthModel_1.configSchema; } });
Object.defineProperty(exports, "OAuthInternetAccountModelFactory", { enumerable: true, get: function () { return OAuthModel_1.modelFactory; } });
const ExternalTokenModel_1 = require("./ExternalTokenModel");
Object.defineProperty(exports, "ExternalTokenConfigSchema", { enumerable: true, get: function () { return ExternalTokenModel_1.configSchema; } });
Object.defineProperty(exports, "ExternalTokenInternetAccountModelFactory", { enumerable: true, get: function () { return ExternalTokenModel_1.modelFactory; } });
const HTTPBasicModel_1 = require("./HTTPBasicModel");
Object.defineProperty(exports, "HTTPBasicConfigSchema", { enumerable: true, get: function () { return HTTPBasicModel_1.configSchema; } });
Object.defineProperty(exports, "HTTPBasicInternetAccountModelFactory", { enumerable: true, get: function () { return HTTPBasicModel_1.modelFactory; } });
const DropboxOAuthModel_1 = require("./DropboxOAuthModel");
Object.defineProperty(exports, "DropboxOAuthConfigSchema", { enumerable: true, get: function () { return DropboxOAuthModel_1.configSchema; } });
Object.defineProperty(exports, "DropboxOAuthInternetAccountModelFactory", { enumerable: true, get: function () { return DropboxOAuthModel_1.modelFactory; } });
const GoogleDriveOAuthModel_1 = require("./GoogleDriveOAuthModel");
Object.defineProperty(exports, "GoogleDriveOAuthConfigSchema", { enumerable: true, get: function () { return GoogleDriveOAuthModel_1.configSchema; } });
Object.defineProperty(exports, "GoogleDriveOAuthInternetAccountModelFactory", { enumerable: true, get: function () { return GoogleDriveOAuthModel_1.modelFactory; } });
class AuthenticationPlugin extends Plugin_1.default {
    constructor() {
        super(...arguments);
        this.name = 'AuthenticationPlugin';
        this.exports = {
            OAuthConfigSchema: OAuthModel_1.configSchema,
            OAuthInternetAccountModelFactory: OAuthModel_1.modelFactory,
            ExternalTokenConfigSchema: ExternalTokenModel_1.configSchema,
            ExternalTokenInternetAccountModelFactory: ExternalTokenModel_1.modelFactory,
            HTTPBasicConfigSchema: HTTPBasicModel_1.configSchema,
            HTTPBasicInternetAccountModelFactory: HTTPBasicModel_1.modelFactory,
            DropboxOAuthConfigSchema: DropboxOAuthModel_1.configSchema,
            DropboxOAuthInternetAccountModelFactory: DropboxOAuthModel_1.modelFactory,
            GoogleDriveOAuthConfigSchema: GoogleDriveOAuthModel_1.configSchema,
            GoogleDriveOAuthInternetAccountModelFactory: GoogleDriveOAuthModel_1.modelFactory,
        };
    }
    install(pluginManager) {
        pluginManager.addInternetAccountType(() => {
            return new InternetAccountType_1.default({
                name: 'OAuthInternetAccount',
                configSchema: OAuthModel_1.configSchema,
                stateModel: (0, OAuthModel_1.modelFactory)(OAuthModel_1.configSchema),
            });
        });
        pluginManager.addInternetAccountType(() => {
            return new InternetAccountType_1.default({
                name: 'ExternalTokenInternetAccount',
                configSchema: ExternalTokenModel_1.configSchema,
                stateModel: (0, ExternalTokenModel_1.modelFactory)(ExternalTokenModel_1.configSchema),
            });
        });
        pluginManager.addInternetAccountType(() => {
            return new InternetAccountType_1.default({
                name: 'HTTPBasicInternetAccount',
                configSchema: HTTPBasicModel_1.configSchema,
                stateModel: (0, HTTPBasicModel_1.modelFactory)(HTTPBasicModel_1.configSchema),
            });
        });
        pluginManager.addInternetAccountType(() => {
            return new InternetAccountType_1.default({
                name: 'DropboxOAuthInternetAccount',
                configSchema: DropboxOAuthModel_1.configSchema,
                stateModel: (0, DropboxOAuthModel_1.modelFactory)(DropboxOAuthModel_1.configSchema),
            });
        });
        pluginManager.addInternetAccountType(() => {
            return new InternetAccountType_1.default({
                name: 'GoogleDriveOAuthInternetAccount',
                configSchema: GoogleDriveOAuthModel_1.configSchema,
                stateModel: (0, GoogleDriveOAuthModel_1.modelFactory)(GoogleDriveOAuthModel_1.configSchema),
            });
        });
    }
}
exports.default = AuthenticationPlugin;
//# sourceMappingURL=index.js.map