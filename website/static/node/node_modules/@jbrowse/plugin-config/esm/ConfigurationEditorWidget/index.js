import React from 'react';
import { observer } from 'mobx-react';
import { isStateTreeNode, getType } from 'mobx-state-tree';
import { ConfigurationSchema } from '@jbrowse/core/configuration';
export { default as stateModelFactory } from './model';
export const configSchema = ConfigurationSchema('ConfigurationEditorWidget', {});
export const HeadingComponent = observer(({ model }) => {
    if (model === null || model === void 0 ? void 0 : model.target) {
        if (model.target.type) {
            return React.createElement(React.Fragment, null, `${model.target.type} settings`);
        }
        if (isStateTreeNode(model.target)) {
            const type = getType(model.target);
            if (type === null || type === void 0 ? void 0 : type.name) {
                return (React.createElement(React.Fragment, null, `${type.name.replace('ConfigurationSchema', '')} settings`));
            }
        }
    }
    return React.createElement(React.Fragment, null, "Settings");
});
//# sourceMappingURL=index.js.map