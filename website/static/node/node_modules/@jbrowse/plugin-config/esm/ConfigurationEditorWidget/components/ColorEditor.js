import React, { lazy, useState } from 'react';
import { observer } from 'mobx-react';
import { TextField } from '@mui/material';
const ColorPicker = lazy(() => import('@jbrowse/core/ui/ColorPicker'));
export const ColorSlot = (props) => {
    const { value = '#000', label = '', TextFieldProps = {}, onChange } = props;
    const [displayed, setDisplayed] = useState(false);
    return (React.createElement("div", { style: { display: 'flex' } },
        React.createElement(TextField, { value: value, label: label, onClick: () => setDisplayed(!displayed), onChange: event => onChange(event.target.value), ...TextFieldProps }),
        React.createElement("div", { style: { marginTop: 10 } },
            React.createElement(React.Suspense, { fallback: React.createElement("div", null) },
                React.createElement(ColorPicker, { color: value, onChange: event => onChange(event) })))));
};
function ColorEditorSlot(props) {
    const { slot } = props;
    return (React.createElement(ColorSlot, { label: slot.name, value: slot.value, onChange: color => slot.set(color), TextFieldProps: {
            helperText: slot.description,
            fullWidth: true,
        } }));
}
export default observer(ColorEditorSlot);
//# sourceMappingURL=ColorEditor.js.map