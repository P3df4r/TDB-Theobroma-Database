"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.HeadingComponent = exports.configSchema = exports.stateModelFactory = void 0;
const react_1 = __importDefault(require("react"));
const mobx_react_1 = require("mobx-react");
const mobx_state_tree_1 = require("mobx-state-tree");
const configuration_1 = require("@jbrowse/core/configuration");
var model_1 = require("./model");
Object.defineProperty(exports, "stateModelFactory", { enumerable: true, get: function () { return __importDefault(model_1).default; } });
exports.configSchema = (0, configuration_1.ConfigurationSchema)('ConfigurationEditorWidget', {});
exports.HeadingComponent = (0, mobx_react_1.observer)(({ model }) => {
    if (model === null || model === void 0 ? void 0 : model.target) {
        if (model.target.type) {
            return react_1.default.createElement(react_1.default.Fragment, null, `${model.target.type} settings`);
        }
        if ((0, mobx_state_tree_1.isStateTreeNode)(model.target)) {
            const type = (0, mobx_state_tree_1.getType)(model.target);
            if (type === null || type === void 0 ? void 0 : type.name) {
                return (react_1.default.createElement(react_1.default.Fragment, null, `${type.name.replace('ConfigurationSchema', '')} settings`));
            }
        }
    }
    return react_1.default.createElement(react_1.default.Fragment, null, "Settings");
});
//# sourceMappingURL=index.js.map