import { BaseFeatureDataAdapter } from '@jbrowse/core/data_adapters/BaseAdapter';
import SimpleFeature, { Feature, SimpleFeatureSerialized } from '@jbrowse/core/util/simpleFeature';
import { NoAssemblyRegion } from '@jbrowse/core/util/types';
import { AnyConfigurationModel } from '@jbrowse/core/configuration';
import PluginManager from '@jbrowse/core/PluginManager';
import { getSubAdapterType } from '@jbrowse/core/data_adapters/dataAdapterCache';
/**
 * Adapter that just returns the features defined in its `features` configuration
 * key, like:
 *   `"features": [ { "refName": "ctgA", "start":1, "end":20 }, ... ]`
 */
export default class FromConfigAdapter extends BaseFeatureDataAdapter {
    protected features: Map<string, Feature[]>;
    constructor(conf: AnyConfigurationModel, getSubAdapter?: getSubAdapterType, pluginManager?: PluginManager);
    static makeFeatures(fdata: SimpleFeatureSerialized[]): Map<string, Feature[]>;
    static makeFeature(data: SimpleFeatureSerialized): SimpleFeature;
    getRefNames(): Promise<string[]>;
    getRefNameAliases(): Promise<{
        refName: string;
        aliases: any;
    }[]>;
    getFeatures(region: NoAssemblyRegion): import("rxjs").Observable<Feature>;
    freeResources(): void;
}
