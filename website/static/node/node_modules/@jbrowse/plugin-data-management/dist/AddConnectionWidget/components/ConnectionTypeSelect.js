"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importStar(require("react"));
const material_1 = require("@mui/material");
// icons
const OpenInNew_1 = __importDefault(require("@mui/icons-material/OpenInNew"));
function ConnectionTypeSelect(props) {
    const { connectionTypeChoices, connectionType, setConnectionType } = props;
    (0, react_1.useEffect)(() => {
        if (!connectionType) {
            setConnectionType(connectionTypeChoices[0]);
        }
    });
    return (react_1.default.createElement("form", { autoComplete: "off" }, connectionType ? (react_1.default.createElement(material_1.TextField, { value: connectionType.name, label: "connectionType", helperText: connectionType.description ? (react_1.default.createElement(react_1.default.Fragment, null,
            connectionType.description,
            connectionType.url ? (react_1.default.createElement(material_1.IconButton, { href: connectionType.url, rel: "noopener noreferrer", target: "_blank", color: "secondary" },
                react_1.default.createElement(OpenInNew_1.default, null))) : null)) : null, select: true, fullWidth: true, onChange: event => setConnectionType(connectionTypeChoices.find(c => c.name === event.target.value)), variant: "outlined" }, connectionTypeChoices.map(c => (react_1.default.createElement(material_1.MenuItem, { key: c.name, value: c.name }, c.displayName || c.name))))) : null));
}
exports.default = ConnectionTypeSelect;
//# sourceMappingURL=ConnectionTypeSelect.js.map