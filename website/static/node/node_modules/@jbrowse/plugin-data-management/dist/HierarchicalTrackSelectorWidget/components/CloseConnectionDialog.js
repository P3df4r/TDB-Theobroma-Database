"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const material_1 = require("@mui/material");
const mobx_react_1 = require("mobx-react");
function CloseConnectionDialog({ modalInfo = {}, setModalInfo, }) {
    const { name, dereferenceTypeCount, safelyBreakConnection } = modalInfo;
    return (react_1.default.createElement(material_1.Dialog, { open: true },
        react_1.default.createElement(material_1.DialogTitle, null,
            "Close connection \"",
            name,
            "\""),
        react_1.default.createElement(material_1.DialogContent, null,
            dereferenceTypeCount ? (react_1.default.createElement(react_1.default.Fragment, null,
                react_1.default.createElement(material_1.DialogContentText, null, "Closing this connection will close:"),
                react_1.default.createElement(material_1.List, null, Object.entries(dereferenceTypeCount).map(([key, value]) => (react_1.default.createElement(material_1.ListItem, { key: key }, `${value} ${key}`)))))) : null,
            react_1.default.createElement(material_1.DialogContentText, null, "Are you sure you want to close this connection?")),
        react_1.default.createElement(material_1.DialogActions, null,
            react_1.default.createElement(material_1.Button, { onClick: () => setModalInfo(), color: "primary" }, "Cancel"),
            react_1.default.createElement(material_1.Button, { variant: "contained", onClick: modalInfo
                    ? () => {
                        safelyBreakConnection === null || safelyBreakConnection === void 0 ? void 0 : safelyBreakConnection();
                        setModalInfo();
                    }
                    : () => { }, color: "primary" }, "OK"))));
}
exports.default = (0, mobx_react_1.observer)(CloseConnectionDialog);
//# sourceMappingURL=CloseConnectionDialog.js.map