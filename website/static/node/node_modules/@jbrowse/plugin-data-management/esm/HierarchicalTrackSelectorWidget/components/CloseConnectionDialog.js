import React from 'react';
import { Dialog, DialogTitle, DialogContent, DialogContentText, Button, List, ListItem, DialogActions, } from '@mui/material';
import { observer } from 'mobx-react';
function CloseConnectionDialog({ modalInfo = {}, setModalInfo, }) {
    const { name, dereferenceTypeCount, safelyBreakConnection } = modalInfo;
    return (React.createElement(Dialog, { open: true },
        React.createElement(DialogTitle, null,
            "Close connection \"",
            name,
            "\""),
        React.createElement(DialogContent, null,
            dereferenceTypeCount ? (React.createElement(React.Fragment, null,
                React.createElement(DialogContentText, null, "Closing this connection will close:"),
                React.createElement(List, null, Object.entries(dereferenceTypeCount).map(([key, value]) => (React.createElement(ListItem, { key: key }, `${value} ${key}`)))))) : null,
            React.createElement(DialogContentText, null, "Are you sure you want to close this connection?")),
        React.createElement(DialogActions, null,
            React.createElement(Button, { onClick: () => setModalInfo(), color: "primary" }, "Cancel"),
            React.createElement(Button, { variant: "contained", onClick: modalInfo
                    ? () => {
                        safelyBreakConnection === null || safelyBreakConnection === void 0 ? void 0 : safelyBreakConnection();
                        setModalInfo();
                    }
                    : () => { }, color: "primary" }, "OK"))));
}
export default observer(CloseConnectionDialog);
//# sourceMappingURL=CloseConnectionDialog.js.map