import React from 'react';
import { observer } from 'mobx-react';
import { FormControl, FormHelperText, Select, MenuItem } from '@mui/material';
import { getEnv, useLocalStorage } from '@jbrowse/core/util';
import DefaultAddTrackWorkflow from './DefaultAddTrackWorkflow';
import PasteConfigWorkflow from './PasteConfigWorkflow';
function AddTrackSelector({ model }) {
    const [val, setVal] = useLocalStorage('trackSelector-choice', 'Default');
    const { pluginManager } = getEnv(model);
    const widgets = pluginManager.getElementTypesInGroup('add track workflow');
    const ComponentMap = {
        Default: DefaultAddTrackWorkflow,
        'Add track JSON': PasteConfigWorkflow,
        ...Object.fromEntries(widgets.map(w => [w.name, w.ReactComponent])),
    };
    // make sure the selected value is in the list
    const val2 = ComponentMap[val] ? val : 'Default';
    const Component = ComponentMap[val2];
    return (React.createElement(React.Fragment, null,
        React.createElement(FormControl, null,
            React.createElement(Select, { value: val2, onChange: event => setVal(event.target.value) }, Object.keys(ComponentMap).map(e => (React.createElement(MenuItem, { key: e, value: e }, e)))),
            React.createElement(FormHelperText, null, "Type of add track workflow")),
        React.createElement("br", null),
        React.createElement(Component, { model: model })));
}
export default observer(AddTrackSelector);
//# sourceMappingURL=AddTrackWidget.js.map