import React, { useEffect } from 'react';
import { IconButton, MenuItem, TextField } from '@mui/material';
// icons
import OpenInNewIcon from '@mui/icons-material/OpenInNew';
function ConnectionTypeSelect(props) {
    const { connectionTypeChoices, connectionType, setConnectionType } = props;
    useEffect(() => {
        if (!connectionType) {
            setConnectionType(connectionTypeChoices[0]);
        }
    });
    return (React.createElement("form", { autoComplete: "off" }, connectionType ? (React.createElement(TextField, { value: connectionType.name, label: "connectionType", helperText: connectionType.description ? (React.createElement(React.Fragment, null,
            connectionType.description,
            connectionType.url ? (React.createElement(IconButton, { href: connectionType.url, rel: "noopener noreferrer", target: "_blank", color: "secondary" },
                React.createElement(OpenInNewIcon, null))) : null)) : null, select: true, fullWidth: true, onChange: event => setConnectionType(connectionTypeChoices.find(c => c.name === event.target.value)), variant: "outlined" }, connectionTypeChoices.map(c => (React.createElement(MenuItem, { key: c.name, value: c.name }, c.displayName || c.name))))) : null));
}
export default ConnectionTypeSelect;
//# sourceMappingURL=ConnectionTypeSelect.js.map