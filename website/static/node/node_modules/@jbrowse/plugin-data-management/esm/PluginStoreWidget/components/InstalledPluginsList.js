import React from 'react';
import { observer } from 'mobx-react';
import { List, Typography } from '@mui/material';
import InstalledPlugin from './InstalledPlugin';
function InstalledPluginsList({ pluginManager, model, }) {
    const { plugins } = pluginManager;
    const corePlugins = plugins
        .filter(p => { var _a; return (_a = pluginManager.pluginMetadata[p.name]) === null || _a === void 0 ? void 0 : _a.isCore; })
        .map(p => p.name);
    const externalPlugins = plugins.filter(plugin => !corePlugins.includes(plugin.name));
    return (React.createElement(List, null, externalPlugins.length ? (externalPlugins
        .filter(plugin => plugin.name.toLowerCase().includes(model.filterText.toLowerCase()))
        .map(plugin => (React.createElement(InstalledPlugin, { key: plugin.name, plugin: plugin, model: model, pluginManager: pluginManager })))) : (React.createElement(Typography, null, "No plugins currently installed"))));
}
export default observer(InstalledPluginsList);
//# sourceMappingURL=InstalledPluginsList.js.map