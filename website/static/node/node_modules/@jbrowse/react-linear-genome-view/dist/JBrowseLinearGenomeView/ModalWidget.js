"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importStar(require("react"));
const material_1 = require("@mui/material");
const mui_1 = require("tss-react/mui");
const mobx_react_1 = require("mobx-react");
const mobx_state_tree_1 = require("mobx-state-tree");
const useStyles = (0, mui_1.makeStyles)()({
    paper: {
        overflow: 'auto',
    },
});
const ModalWidgetContents = (0, mobx_react_1.observer)(({ session }) => {
    const { visibleWidget } = session;
    if (!visibleWidget) {
        return (react_1.default.createElement(material_1.AppBar, { position: "relative" },
            react_1.default.createElement(material_1.Toolbar, null)));
    }
    const { pluginManager } = (0, mobx_state_tree_1.getEnv)(session);
    const { ReactComponent, HeadingComponent, heading } = pluginManager.getWidgetType(visibleWidget.type);
    const Component = visibleWidget
        ? pluginManager.evaluateExtensionPoint('Core-replaceWidget', ReactComponent, {
            session,
            model: visibleWidget,
        })
        : null;
    return (react_1.default.createElement(react_1.default.Fragment, null,
        react_1.default.createElement(material_1.AppBar, { position: "static" },
            react_1.default.createElement(material_1.Toolbar, null, HeadingComponent ? (react_1.default.createElement(HeadingComponent, { model: visibleWidget })) : (react_1.default.createElement(material_1.Typography, { variant: "h6" }, heading)))),
        visibleWidget && Component ? (react_1.default.createElement(react_1.Suspense, { fallback: react_1.default.createElement("div", null, "Loading...") },
            react_1.default.createElement(material_1.ScopedCssBaseline, null,
                react_1.default.createElement(Component, { model: visibleWidget, session: session, overrideDimensions: {
                        height: (window.innerHeight * 5) / 8,
                        width: 800,
                    } })))) : null));
});
const ModalWidget = (0, mobx_react_1.observer)(({ session }) => {
    const { classes } = useStyles();
    const { visibleWidget, hideAllWidgets } = session;
    return (react_1.default.createElement(material_1.Dialog, { open: Boolean(visibleWidget), onClose: hideAllWidgets, maxWidth: "xl" },
        react_1.default.createElement(material_1.Paper, { className: classes.paper },
            react_1.default.createElement(ModalWidgetContents, { session: session }))));
});
exports.default = ModalWidget;
//# sourceMappingURL=ModalWidget.js.map